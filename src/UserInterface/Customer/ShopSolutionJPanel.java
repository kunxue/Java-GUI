package UserInterface.Customer;

import Business.Customer.Customer;
import Business.Customer.SolutionItem;
import Business.Market.Market;
import Business.Market.Solution;
import UserInterface.Util.*;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ShopSolutionJPanel extends javax.swing.JPanel {
     
    private Market market;
    private Customer customer;
    private Solution selectsolution; 
    private double selectsolutionprice;
    private SolutionItem solutionitem;
    private SolutionItem selectsolutionitem;
    public ShopSolutionJPanel(Market a,Customer b) 
    {
        initComponents(); 
        market = a;
        customer = b;
        refreshTable();
        refreshSolutionitem();
    }
    public void refreshTable()
    {
         int rowCount = solutionTable.getRowCount();
        int i;
        for (i = rowCount-1; i >= 0; i--)
        {
            ((DefaultTableModel)solutionTable.getModel()).removeRow(i);
        }
        
        Iterator it = market.getSolutions().entrySet().iterator();
        while(it.hasNext())
        {      
            Map.Entry entry   = (Map.Entry)it.next()   ;      
            Object[] solution_row = new Object[3];
            solution_row[0] =(Solution)entry.getKey();
            solution_row[1] = ((Double)entry.getValue()).doubleValue();  
            solution_row[2] = ((Solution)entry.getKey()).getBenefit();
        ((DefaultTableModel)solutionTable.getModel()).addRow(solution_row);
        }         

    
    }
    public void refreshSolutionitem()
    {
        int rowCount = OrderTable.getRowCount();
        int i;
        for (i = rowCount-1; i >= 0; i--)
        {
            ((DefaultTableModel)OrderTable.getModel()).removeRow(i);
        }
        ArrayList <SolutionItem> solutonitems = customer.getSolutionItems();
        for(SolutionItem a:solutonitems)
        {
            Object[] solution_row = new Object[4];
            solution_row[0] = a;
            solution_row[1] = a.getPrice();  
            solution_row[2] = a.getQuantity();
            solution_row[3] = a.getTotalAmount();
        ((DefaultTableModel)OrderTable.getModel()).addRow(solution_row);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        solutionTable = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        QuantitySpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        TotalPriceLabel = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24));
        jLabel1.setText("Solution Shopping");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 20, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18));
        jLabel3.setText("Solutions");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 80, -1, -1));

        jButton1.setText("Check Out");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 590, -1, -1));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 590, -1, -1));

        jButton3.setText("View Details");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 280, -1, -1));

        solutionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Solution Name", "Price", "Description"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        solutionTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                solutionTableMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(solutionTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 650, 150));

        jButton4.setText("Add to Cart");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 290, -1, -1));

        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Solution Name", "Price", "Quantity", "Total Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        OrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                OrderTableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(OrderTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 390, 650, 130));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 18));
        jLabel4.setText("Solutions in Your Cart");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 350, -1, -1));

        jButton5.setText("Refresh");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 350, -1, -1));
        add(QuantitySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 290, 70, -1));

        jLabel5.setText("Quantity:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 290, -1, -1));

        jButton6.setText("Remove");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 530, -1, -1));

        TotalPriceLabel.setBackground(new java.awt.Color(255, 255, 51));
        TotalPriceLabel.setFont(new java.awt.Font("Lucida Grande", 1, 18));
        add(TotalPriceLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 590, 250, 30));

        jButton9.setText("Modify Quantity");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 530, 130, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 710, 10));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 570, 710, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
// TODO add your handling code here: MODIFY QUANTITY BUTTON     
         ModifyQuantityJPanel vpdojp = new ModifyQuantityJPanel(selectsolutionitem);
        CardLayoutUtil.getCardLayoutJPanel().addAndMoveToNextJPanel("ModifyQuantityJPanel", vpdojp); 
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here: DONE BUTTON
         JOptionPane.showMessageDialog(this, "solution shopping successful!");  
         CardLayoutUtil.getCardLayoutJPanel().removeAndMoveToPreviousJPanel(this);   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
// TODO add your handling code here: REMOVE SELECTED ITEM
      int rr = OrderTable.getSelectionModel().getLeadSelectionIndex();
        if(rr < 0 || rr >= OrderTable.getRowCount())
       {
             return ;
       }
        else
        {
           customer.getSolutionItems().remove(selectsolutionitem);
           refreshSolutionitem();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here: CANCEL BUTTON

        CardLayoutUtil.getCardLayoutJPanel().removeAndMoveToPreviousJPanel(this);     
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
// TODO add your handling code here: ADD TO CART
      int rr = solutionTable.getSelectionModel().getLeadSelectionIndex();
      if(rr < 0 || rr >= solutionTable.getRowCount())
      {
             return ;
      }
      else
      {  
        int quantity = (Integer)QuantitySpinner.getValue();
          boolean mark = true;
          ArrayList <SolutionItem> solutionitems = customer.getSolutionItems();
          SolutionItem temp = null;
          for(SolutionItem a:solutionitems)
          {
              if(a.getSolution().equals(selectsolution))
              {
                  mark = false;
                  temp = a;
                  break;
              }
          }
         if(mark)
         {      
            solutionitem = customer.newSolutionItem();
       
            solutionitem.setQuantity(quantity);
            solutionitem.setPrice(selectsolutionprice);
            solutionitem.setSolution(selectsolution);
            solutionitem.setTotalAmount(selectsolutionprice*quantity);
            refreshSolutionitem();
         }
         else
         {
              temp.setQuantity(quantity+temp.getQuantity());
              temp.setTotalAmount(temp.getPrice()*(temp.getQuantity()));
              refreshSolutionitem();
         }
      }
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
// TODO add your handling code here: REFRESH ORDER LIST   
         refreshSolutionitem();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
// TODO add your handling code here: VIEW PRODUCT
         int rr = solutionTable.getSelectionModel().getLeadSelectionIndex();
        if(rr < 0 || rr >= solutionTable.getRowCount())
       {
             return ;
       }
        else
        {
        ViewSolutionDetailJPanel vpdojp = new ViewSolutionDetailJPanel(selectsolution,selectsolutionprice,customer);
        CardLayoutUtil.getCardLayoutJPanel().addAndMoveToNextJPanel("ViewSolutionDetailJPanel", vpdojp); 
        }
    }//GEN-LAST:event_jButton3ActionPerformed

private void solutionTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_solutionTableMousePressed
// TODO add your handling code here:
         int rr = solutionTable.getSelectionModel().getLeadSelectionIndex();
        if(rr < 0 || rr >= solutionTable.getRowCount())
       {
             return ;
       }

  selectsolution = (Solution)solutionTable.getValueAt(rr,0);
  selectsolutionprice = ((Double)solutionTable.getValueAt(rr,1)).doubleValue();
}//GEN-LAST:event_solutionTableMousePressed

private void OrderTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTableMousePressed
// TODO add your handling code here:
        int rr = OrderTable.getSelectionModel().getLeadSelectionIndex();
        if(rr < 0 || rr >= OrderTable.getRowCount())
       {
             return ;
       }
  selectsolutionitem = (SolutionItem)OrderTable.getValueAt(rr,0);
}//GEN-LAST:event_OrderTableMousePressed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderTable;
    private javax.swing.JSpinner QuantitySpinner;
    private javax.swing.JLabel TotalPriceLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable solutionTable;
    // End of variables declaration//GEN-END:variables
    
}
