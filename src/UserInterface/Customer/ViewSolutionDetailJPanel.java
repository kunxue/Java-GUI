package UserInterface.Customer;

import Business.Customer.Customer;
import Business.Customer.SolutionItem;
import Business.Market.Solution;
import Business.ProductManagement.Product;
import UserInterface.Util.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.table.DefaultTableModel;

public class ViewSolutionDetailJPanel extends javax.swing.JPanel {

    private Solution solution;
    private double price;
    private Customer customer;
    private HashMap<Product, Integer> products;
    private ArrayList<String> benefit;
    private SolutionItem solutionitem;

    public ViewSolutionDetailJPanel(Solution a, double b, Customer c) {
        initComponents();
        solution = a;
        price = b;
        customer = c;
        products = solution.getProductList();
        benefit = solution.getBenefit();
        solutionName.setText(solution.getName());
        categoryField.setText(solution.getCategory());
        totalPrice.setText(((Double) price).toString());


        int rowCount = productlist.getRowCount();
        int i;
        for (i = rowCount - 1; i >= 0; i--) {
            ((DefaultTableModel) productlist.getModel()).removeRow(i);
        }
        Iterator it = products.entrySet().iterator();
        while (it.hasNext()) {
            Map.Entry entry = (Map.Entry) it.next();
            Object[] product_row = new Object[3];
            product_row[0] = entry.getKey();
            product_row[1] = entry.getValue();
            ((DefaultTableModel) productlist.getModel()).addRow(product_row);
        }


        for (String aa : benefit) {
            ((DefaultListModel) jList1.getModel()).addElement(aa);
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        solutionName = new javax.swing.JTextField();
        totalPrice = new javax.swing.JTextField();
        categoryField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        productlist = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        QuantitySpinner = new javax.swing.JSpinner();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24));
        jLabel1.setText("View Solution Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, -1, -1));

        jButton1.setText("Add to Cart");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, -1, -1));

        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 430, -1, -1));

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        jLabel2.setText("Solution Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        jLabel3.setText("Category:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 90, -1, -1));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        jLabel4.setText("Total Price:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, -1, -1));

        jLabel6.setText("Quantity:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 430, -1, -1));

        solutionName.setBackground(new java.awt.Color(204, 204, 204));
        solutionName.setEditable(false);
        add(solutionName, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 180, -1));

        totalPrice.setBackground(new java.awt.Color(204, 204, 204));
        totalPrice.setEditable(false);
        add(totalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 180, -1));

        categoryField.setBackground(new java.awt.Color(204, 204, 204));
        categoryField.setEditable(false);
        add(categoryField, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 90, 180, -1));

        productlist.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        productlist.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                productlistMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(productlist);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 300, 130));

        jLabel8.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        jLabel8.setText("List of Products:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 140, -1));
        add(QuantitySpinner, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 430, 70, -1));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 700, 10));

        jList1.setModel(new DefaultListModel());
        jScrollPane2.setViewportView(jList1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 220, 230, 130));

        jLabel9.setFont(new java.awt.Font("Lucida Grande", 1, 13));
        jLabel9.setText("Benefits:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 190, 140, -1));
        add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 700, 10));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here: BACK BUTTON
        CardLayoutUtil.getCardLayoutJPanel().removeAndMoveToPreviousJPanel(this);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here: ADD TO CART BUTTON
        int quantity = (Integer) QuantitySpinner.getValue();
        boolean mark = true;
        ArrayList<SolutionItem> solutionitems = customer.getSolutionItems();
        SolutionItem temp = null;
        for (SolutionItem a : solutionitems) {
            if (a.getSolution().equals(solution)) {
                mark = false;
                temp = a;
                break;
            }
        }
        if (mark) {
            solutionitem = customer.newSolutionItem();

            solutionitem.setQuantity(quantity);
            solutionitem.setPrice(solution.getTotalPrice());
            solutionitem.setSolution(solution);
            solutionitem.setTotalAmount(solution.getTotalPrice() * quantity);
        } else {
            temp.setQuantity(quantity + temp.getQuantity());
            temp.setTotalAmount(temp.getPrice() * (temp.getQuantity()));

        }
            CardLayoutUtil.getCardLayoutJPanel().removeAndMoveToPreviousJPanel(this);
    }//GEN-LAST:event_jButton1ActionPerformed

private void productlistMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_productlistMousePressed
// TODO add your handling code here:
}//GEN-LAST:event_productlistMousePressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner QuantitySpinner;
    private javax.swing.JTextField categoryField;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable productlist;
    private javax.swing.JTextField solutionName;
    private javax.swing.JTextField totalPrice;
    // End of variables declaration//GEN-END:variables
}
